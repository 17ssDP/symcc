

                                    Testing


The short version:

$ ninja test


The slightly longer version:

We use the LLVM tools "lit" and "FileCheck", integrated with CMake. Since there
is little documentation on setting up the combination of those tools (apart from
the LLVM source code), here is an overview of the setup:

1. Tests are C or C++ source files in the "test" subdirectory of the project.
   They contain instructions for FileCheck in comments; see that tool's
   documentation.

2. We run the individual tests through lit, LLVM's configurable test runner. It
   finds each test file, performs some variable substitutions (see below), and
   runs the tests. The main source of configuration is "test/lit.cfg".

3. At configuration time, CMake creates an additional config file for lit,
   containing site-specific configuration such as the output directory of the
   build. The template is "test/lit.site.cfg.in".

4. CMake adds the "test" target, which invokes lit on the test suite with two
   additional arguments: the compiler pass and the runtime. (The reason for not
   passing those arguments through "lit.site.cfg" is that CMake doesn't know
   them early enough in the configuration process.)

Test files can use the following patterns:

%s             The test file itself.
%t             A temporary file.
%symcc         Invocation of clang with our custom pass loaded.
%symruntime    Compiler flags for building with the runtime.
